@model EMenuApplication.ViewModels.Country_VM
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="content-wrapper">
    <div class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1 class="m-0 text-dark">Country</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item">
                            <a asp-action="List" asp-controller="Country">Country</a>
                        </li>
                        <li class="breadcrumb-item active">@ViewData["Title"]</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>

    <div class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-lg-12">
                    @using (Html.BeginForm("Save", "Country", FormMethod.Post, new { role = "form", id = "country-form" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.CountryID)
                        <div class="card">
                            <div class="card-header">
                                <h3 class="card-title">@ViewData["Title"] </h3>
                            </div>
                            <div class="card-body">

                                <div class="row">
                                    <div class="col-lg-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Name, "Name")
                                            @Html.TextBoxFor(m => m.Name, new { placeholder = "Enter name", @class = "form-control", autocomplete = "off", maxlength = "50" })
                                        </div>
                                    </div>
                                    <div class="col-lg-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Status, "Is Active?")
                                            @Html.CheckBoxFor(m => m.Status, new { @checked = true, @class = "form-control w-5" })
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-lg-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Country, "Country")
                                            @Html.TextBoxFor(m => m.Country, new { placeholder = "Enter country", @class = "form-control", autocomplete = "off", maxlength = "2" })
                                        </div>
                                    </div>
                                    <div class="col-lg-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Code, "Code")
                                            @Html.TextBoxFor(m => m.Code, new { placeholder = "Enter code", @class = "form-control", autocomplete = "off", maxlength = "4", type = "number", min = "0" })
                                        </div>
                                    </div>
                                </div>


                                <div class="row">
                                    <div class="col-lg-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Digits, "Max Digits")
                                            @Html.TextBoxFor(m => m.Digits, new { placeholder = "Enter max digits", @class = "form-control", autocomplete = "off", maxlength = "2", type="number", min = "0" })
                                        </div>
                                    </div>
                                    <div class="col-lg-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.minDigits, "Min Digits")
                                            @Html.TextBoxFor(m => m.minDigits, new { placeholder = "Enter min digits", @class = "form-control", autocomplete = "off", maxlength = "2", type = "number", min = "0" })
                                        </div>
                                    </div>
                                </div>


                                <div class="row">
                                    <div class="col-lg-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.timezone, "Timezone")
                                            @Html.TextBoxFor(m => m.timezone, new { placeholder = "Enter timezone", @class = "form-control", autocomplete = "off", maxlength = "50" })
                                        </div>
                                    </div>
                                    <div class="col-lg-6">
                                       
                                    </div>
                                </div>
                                
                            </div>

                            <div class="card-footer">
                                <button type="submit" class="btn btn-primary">Submit</button>
                                <a asp-action="List" asp-controller="Country" role="button" class="btn btn-danger">Cancel</a>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#country-form').validate({
                rules: {
                    Name: {
                        required: true,
                        remote: function () {
                            return {
                                url: '/Country/CheckUniqueCountryName',
                                type: "get",
                                data: {
                                    id: function () {
                                        return $('#CountryID').val();
                                    },
                                    countryName: function () {
                                        return $('#Name').val();
                                    }
                                },
                                dataFilter: function (data) {
                                    return data;
                                }
                            }
                        }
                    },
                    Country: {
                        required: true,
                    },
                    Code: {
                        required: true,
                    },
                    Digits: {
                        required: true,
                    },
                    minDigits: {
                        required: true,
                    },
                    timezone: {
                        required: true,
                    }
                },
                messages: {
                    Name: {
                        required: "Please enter name",
                        remote: "This name is already taken."
                    },
                    Country: {
                        required: "Please enter country ",
                    },
                    Code: {
                        required: "Please enter code",
                    },
                    Digits: {
                        required: "Please enter maximum digits",
                    },
                    minDigits: {
                        required: "Please enter minimum digits",
                    },
                    timezone: {
                        required: "Please enter timezone",
                    }
                },
                errorElement: 'span',
                errorPlacement: function (error, element) {
                    error.addClass('invalid-feedback');
                    element.closest('.form-group').append(error);
                },
                highlight: function (element, errorClass, validClass) {
                    $(element).addClass('is-invalid');
                },
                unhighlight: function (element, errorClass, validClass) {
                    $(element).removeClass('is-invalid');
                }
            });
        });
    </script>
}
